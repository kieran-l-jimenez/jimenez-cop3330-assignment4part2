@startuml

interface Comparator{}
interface Initializable{}

class App {
    + main()
    + start()
}

class ToDoController {
- itemDescriptionBox : TextField
- itemDueDateBox : TextField
- itemFilter : ComboBox
- listView : ListView
- itemActionType : ChoiceBox
- listTitle : Tab

- currentList : ToDoList
- fileChooser : FileChooser

+ clearListPressed()
+ openListPressed()
+ saveListPressed()
+ showListUpdated()
+ executePressed()

+ initialize()
+ makeItem()
+ editDate()
+ editDescription()
+ deleteItem()
+ markIncomplete()
+ markComplete()
+ updateListView()
+ saveList()
'Req 13
+ loadList()
'Req 14
}

'Req 1
class ToDoList {
- title : String
- items : ArrayList<Item>
- numItems : int

+ ToDoList()

+ setTitle()
+ getTitle() : String
+ addItem()
'Req 4
+ getItem() : Item
+ removeItem()
'Req 5
+ editItemDescription()
'Req 7
+ editItemDate()
'Req 8
+ getItemList() : ArrayList
+ setItemList()
+ clearAllItems()
'Req 6
+ markItemComplete()
+ markItemIncomplete()
'Req 9
+ sortItemAll() : ArrayList
'Req 10
+ sortItemIncomplete() : ArrayList
'Req 11
+ sortItemComplete() : ArrayList
'Req 12
+ sortItemDate()
}

class Item {
- Description : String
'Req 2
- DueDate : Calendar
'Req 3
'Format: YYYY-MM-DD
- Complete : Boolean

+ Item()

+ getDescription() : String
+ setDescription()
+ getDueDate() : String
+ setDueDate()
- validateDate() : Boolean
+ getComplete() : Boolean
+ markComplete()
+ markIncomplete()
}

class SortByDate {
+ compare() : int
}

ToDoList "1 " *-- "many" Item
App - ToDoController
ToDoController -- ToDoList
javafx.Application <|-- App
Comparator <|.. SortByDate
Initializable <|.. ToDoController
ToDoList . SortByDate
@enduml